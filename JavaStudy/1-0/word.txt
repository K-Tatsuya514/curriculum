■ IT
IT: Information Technology、情報技術=コンピュータとネットワークを利用した技術
ICT: Information and Communication Technology、情報通信科学=ITとほぼ同じ意味だが、情報や技術の共有のための「コミュニケーション」の意味が強調されている。
IoT: Internet of Things=身の回りのあらゆるモノがインターネットにつながる仕組み
■ OS
OS：パソコンとして動作させるために必要なプログラム。
Windows：マイクロソフト社
macOS (Mac OS X)：アップルコンピュータ
UNIX：OS の一種で、類似する OS が数多くある。GUI ではなく CUI での利用がメ
インという特徴をもつ。
Linux： UNIX 互換 OS の一つ。オープンソースソフトウェア。GitHubと同じ人が作った。
■ 言語・環境
マークアップ／フロントエンド：タグを使ってテキストを記述する。/WebサービスやWebアプリケーションで直接ユーザーの目に触れる部分。
HTML：Webページを作るための最も基本的なマークアップ言語のひとつ。
CSS：ウェブページのスタイルを指定するための言語。
JavaScript：動的にコンテンツを更新したり、マルチメディアを管理したり、その他多くのことができるスクリプト言語(コンパイラいらない)。
サーバーサイド：サーバ上で動くもの
.NET（C#, VB）：ネットワーク上でアプリケーションを構築する基盤システム。
Java：OSに関係なく動作するプログラミング言語。コンパイル言語。
Java SE：Javaの基本機能をまとめたもの
Java EE（Jakarta EE）：JavaSEを元にしてサーバーサイドの機能を追加したもの。Webサイトの情報を送る際に必要な処理をやる。
Perl：スクリプト言語。Webサーバ上で動作するCGI。さらに、テキスト操作にも強い。
PHP：スクリプト言語。Webアプリケーションの開発に特化した言語。簡単な反面、知識が少ないとセキュリティが脆弱性の危険がある。
Ruby：スクリプト言語。Ruby on RailsというWebアプリケーションフレームワークを使える。
■ サーバーソフト
Apache（アパッチ）：Webサーバーソフトウェアで、全世界の50%のシェアを占めている。オープンソースソフトウェア。
Nginx（エンジンエックス）：Apacheに次いで2位のシェア。Apacheよりも高速で大量処理が得意。設定情報が少なく上級者向け。
IIS：winodwsOSで動き、コマンドを使わず視覚的に操作可能。日本語マニュアルも多い。
■ SQL
SQL：シーケルとも呼ぶ。データベースを操作するための言語(データベース言語でプログラミング言語ではない)。データベースにデータを挿入したり、検索したりする際に利用します。
DB2：IBMが開発・販売するリレーショナルデータベース(データを、複数の行と列で構成された表の形式で取り扱う)。 
MySQL：オープンソースのリレーショナルデータベース管理システム。処理速度が速くWebとの親和性が高い。
Maria DB：MySQCから派生しオープンソースリレーショナルデータベース管理システム。MySQLとの高い互換性。GPL(ジェネラルパブリックライセンス)で完全なオープンソースソフトウェア。セキュリティ面・拡張性・品質が向上している。
Oracle DB：oracle社が開発した世界初の商用リレーショナルデータベース。ネットワーク用・大規模システム用で使用。
PostgreSQL：MySQLと人気を二分する、フリーなオープンソースのリレーショナルデータベースマネジメントシステム
SQLite：パブリックドメイン(著作物や発明の知的財産権を放棄したライセンス形態)のリレーショナルデータベース。
SQL Server：マイクロソフトからリリースされているリレーショナルデータベース管理システム。WindowsOSとの相性がいい。
CRUD：システムに必要な4つの主要機能である「Create（生成）」「Read（読み取り）」「Update（更新）」「Delete（削除）」の頭文字を並べた用語
トランザクション：「商品を渡して、代金を受け取る」のように「ここからここまでワンセット」な処理単位のことで、どれか一つでもかけてはだめ。これによってデータ更新処理の確定や取り消しを管理できる。
コミット：トランザクションを確定させる処理で、一度コミットすると元には戻せない。
ロールバック：トランザクションを取り消す処理。データベースはトランザクション開始前の状態になる。
排他制御（排他ロック）：あるトランザクションが実行中のときに、そのトランザクションが対象としているデータをロックし、他のトランザクションのアクセスを禁止することによって、データの整合性を確保しようとする仕組み。
楽観ロック：めったなことでは他者との同時更新は起きないであろう、という楽観的な前提。データそのものに対してロックは行わずに、更新対象のデータがデータ取得時と同じ状態であることを確認してから更新することで、データの整合性を保証する方式。
悲観ロック：他者が同じデータに頻繁に変更を加えるであろう、という悲観的な前提。更新対象のデータを取得する際にロックをかけることで、他のトランザクションから更新されないようにする方式。
実行計画：どうしたらより短い時間でSQLを実行できるか、計算して導き出された、具体的な方法を「計画」としてまとめたも。
チューニング：性能の悪いSQLを発見し、その処理過程を改善すること
パフォーマンス：処理性能や実行速度、通信回線・ネットワークなどの伝送速度・容量など
スロークエリ：データベースにおいて、時間のかかっているSQL(遅いSQL)のこと
クエリログ
IDE（統合開発環境）：プログラムを作るために必要な物が全部詰まった開発環境。EclipseとかVisualStudioとか。コンパイラ・エディタ・デバック機能などがセットになったツール。
Eclipse：JavaのIDE。
NetBeans：Eclipseと同じだが、拡張性が低く、保管やエラー検出が弱い。しかし、Eclipseより、わかりやすくてシンプル。
SpringToolSuite：JavaのフレームワークであるSpringを使うためのツール。
DBツール：データベース管理タスクに使用できるツール。
A5:SQL Mk-2：データベース開発において生産性を向上させるべく開発されたSQL開発ツール。
pgAdmin：GUIによるPostgreSQLの管理ツール。
DBeaver：ほとんどのDBに対応してる、SQL管理ツール。
MySQL Workbench：MySQLが公式に出している、MySQLのデータベースを操作できるGUIツール。Sequel Proと機能がほぼ同じになります。
Sequel Pro：Mac用のMySQLのデータをGUI操作で管理するためのアプリケーション。
TeamSQL：2019年にサービスが終わった。代用品としてDBeaverやMySQL Workbench
■ 肩書
PM：定められた期限までにプロジェクトの目標を達成するため、与えられた予算や人材、設備、物資などを用いて実施計画を立て、適宜修正しながら進捗の管理を行う。このようなプロジェクトの管理業務。
PL：システムの構築・導入プロジェクトにおいて、プロジェクトチームを管理・統括する業務。
PG（PE）：SEが作成した設計書に沿ってプログラミングを行う仕事のこと。
SE：プログラムの設計をする仕事のことです。
デザイナー：クライアントや依頼者の求めに応じたデザインを考案する仕事。
エンジニア
フロントエンド・エンジニア：WebサイトやWebアプリケーションのフロントエンド部分を開発するエンジニア。
サーバーサイド・エンジニア：サーバサイド（側）で動くシステムを作るエンジニア
バックエンド・エンジニア：サーバ側の処理を担当するエンジニア。
■ UI（ユーザーインターフェース）
UI：画面であったり、見た目や使い勝手のこと。人とデバイスをつなぐ窓口のようなもの。
CUI：、ターミナル内で、キーボードによるコマンド入力でコンピュータに命令を送り画面に文字表示されることでコンピュータを操作するシステム。
GUI：OS の種類に関係なく、ウィンドウなどでのマウス操作し、キーボードで文字入力を行うシステム。
■ ファイル／ディレクトリ
ファイル：コンピュータの世界における「書類」のこと。
拡張子：ファイルの種類を表す目印。
ディレクトリ：コンピュータさんの世界における「書類入れ」。
ルート・ディレクトリ：「これ以上は上に行けないよ」なディレクトリ、根元のディレクトリ。
カレント・ディレクトリ：自分が今いるディレクトリのこと。
パス：ファイルやフォルダの置いてある場所のこと。。
絶対パス：ルートディレクトリを基準としたパス。
相対パス：カレントディレクトリを基準としたパス。
■ ネットワーク
LAN：Local Area Network のことで、コンピュータネットワークの最小単位である。
WAN：Wide Area Network の略で、LAN 同士を接続するネットワークである。
クライアント
サーバー：サービス提供役のネットワーク機器
■ 各種プロトコル
HTTP：ホームページのファイルとかを移動するときに使うプロトコル。
FTP：ネットワーク経由でファイルをやり取りする際のプロトコル。
HTTPS：暗号化通信されたHTTPをやるときに使う。
SSL：インターネット上の通信を暗号化するプロトコル。
SSH：他のコンピュータを遠隔操作するための仕組みtelnetに、暗号化がプラスされたもの。
ポート、ポート番号：ネットワークとパソコンの間にあるドアをポート。ポートに振り分けられている識別番号がポート番号。
HTTP、FTP、SSHの各ポート番号：TCP20→FTP(データ)、TCP21→FTP(制御)、TCP22→SSH、TCP80→HTTP
ファイアウォール：ネットワークにおける門番の役割を果たす。必要な通信を通し、不執拗な通信は遮断する。
TCP：通信する上でのお約束事のひとつで、安全性重視でやり取りするが、速度が遅いプロトコル。
■ IPアドレス
IPアドレス：ネットワークの位置としての住所。
グローバルIPアドレス：、インターネットに直接接続するためのアドレスであり、世界で唯一の IP アドレスとなる。
プライベートIPアドレス：ローカルネットワークで利用されるアドレスです
■ ドメイン
ドメイン：IPアドレスは人間には覚えづらいため、人間にも覚えやすいようスペルで表した形のこと。
DNS(ドメインネームシステム)：ドメイン名と IP アドレスの対応を管理するシステムのこと。
VPN（バーチャル・プライベート・ネットワーク）：離れた場所の間を仮想的な専用線でつないで安全なデータ通信を実現する仕組み。
ブリッジ
プロキシサーバー：クライアントとサーバ間で通信を行うときの、中継(代理)サーバ。
■ 電子メール
SMTP：メール送信に関する通信プロトコル。
POP：メールサーバからメールのコピーを持ってきて読むときに使うプロトコル。
IMAP：メールサーバ上でメールを読むときに使う通信プロトコル。
■ セッションとクッキー
セッション：通信の回数ではなく、始まりから終わりを一回とした単位。
クッキー：ID、パスワード、メールアドレス、訪問回数などのユーザー情報を一時的に保存する仕組み。ブラウザからWebサーバに通信し、Webサーバからの返信としてメモ(ファイル)としてブラウザに渡されます。それを、またブラウザからWebサーバに送る時に一緒に送ります。
キャッシュ：訪問した “ ウェブページの情報 ” を一時的に保存する仕組み。
■ DB（データベース）について
インデックス：索引のことで、どのデータがどこにあるかを示した一覧表で、素早く必要なデータにアクセスできる。
■ テストについて
フロー：データや変数の使用の仕方に矛盾が無いかを調べるためのものをデータフローパステストという。
■ チケット管理ツール：実施するべき作業や課題を「チケット」として管理する方法
タスク：仕事のこと。タスクごとにチケットが発行されるため、チケットを確認すれば、タスクの内容が詳細にわかる。
■ バージョン管理
Git：分散型バージョン管理システム。リモートリポジトリとローカルリポジトリなどの、複数のリポジトリを用いて作業する。複数人が関わるプロジェクトでは、形態や規模に合わせて開発が柔軟にできる。
SVN：集中型バージョン管理システム。リポジトリが一つで、誰しもが一つのリポジトリに反映させる。
デグレ＝デグレード(degrade)：システム開発におけるプログラム修正やインフラ設定の変更等により、それまで正常に動作していた機能が動かなくなるという、品質低下のトラブル事象を指す。
マージツール：バージョン管理システムで管理しているものに、新たなコードや修正を反映させたりする操作をマージと言い、その機能を持ったもの。
